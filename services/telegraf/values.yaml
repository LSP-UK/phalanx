telegraf:
  # -- Allow network access to JupyterHub pod.
  podLabels:
    hub.jupyter.org/network-access-hub: "true"
  env:
    # -- Token to communicate with Influx
    - name: INFLUX_TOKEN
      valueFrom:
        secretKeyRef:
          name: telegraf
          key: influx-token
  rbac:
    enabled: true
    clusterWide: true
    # When using the prometheus input to scrape all pods you need extra
    # rules set to the ClusterRole to be able to scan the pods for
    # scraping labels. The following rules have been taken from:
    # https://github.com/helm/charts/blob/master/stable/prometheus/templates/server-clusterrole.yaml#L8-L46
    rules:
      - apiGroups:
          - ""
        resources:
          - nodes
          - nodes/proxy
          - nodes/metrics
          - services
          - endpoints
          - pods
          - ingresses
          - configmaps
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - "extensions"
        resources:
          - ingresses/status
          - ingresses
        verbs:
          - get
          - list
          - watch
      - nonResourceURLs:
          - "/metrics"
          - "/stats"
        verbs:
          - get
  service:
    # -- Telegraf service.
    enabled: false
  config:
    agent:
      omit_hostname: true
    global_tags:
      # -- Cluster name -- should be same as FQDN of RSP endpoint
      # @default -- None, must be set
      cluster: ""
    inputs:
      - prometheus:
      # Collect JupyterHub Prometheus metrics by default.
      # See https://jupyterhub.readthedocs.io/en/stable/reference/metrics.html
          urls:
            - http://hub.nublado2:8081/metrics
          tags:
            prometheus_app: "hub"
          metric_version: 2
      - prometheus:
          urls:
            - http://cert-manager.cert-manager:9402/metrics
          tags:
            prometheus_app: "certmanager"
          metric_version: 2
      - prometheus:
      # Get all the ArgoCD measurements, and put them into an "argocd" bucket
      # but override the measurement names so each category gets its own
      # measurements
          name_override: "application_controller"
          metric_version: 2
          tags:
            prometheus_app: "argocd"
          urls:
            - http://argocd-application-controller-metrics.argocd:8082/metrics
      - prometheus:
          name_override: "notifications_controller"
          metric_version: 2
          tags:
            prometheus_app: "argocd"
          urls:
            - http://argocd-notifications-controller-metrics.argocd:9001/metrics
      - prometheus:
          name_override: "redis"
          metric_version: 2
          tags:
            prometheus_app: "argocd"
          urls:
            - http://argocd-redis-metrics.argocd:9121/metrics
      - prometheus:
          name_override: "repo_server"
          metric_version: 2
          tags:
            prometheus_app: "argocd"
          urls:
            - http://argocd-repo-server-metrics.argocd:8084/metrics
      - prometheus:
          name_override: "server"
          metric_version: 2
          tags:
            prometheus_app: "argocd"
          urls:
            - http://argocd-server-metrics.argocd:8083/metrics
          metric_version: 2
      - prometheus:
          urls:
            - http://ingress-nginx-controller-metrics.ingress-nginx:10254/metrics
          tags:
            prometheus_app: "ingressnginx"
          # See https://docs.influxdata.com/influxdb/v2.1/reference/prometheus-metrics/
          metric_version: 2
      - kubernetes:
          bearer_token: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          insecure_skip_verify: true
          url: "https://kubernetes.default.svc"
          # We only care about the applications; GKE does a good job
          # with the overall cluster.
          namepass: ["kubernetes_pod_container"]
    # -- Telegraf default output destination.
    outputs:
      - influxdb_v2:
          urls:
            - "https://monitoring.lsst.codes"
          bucket: "prometheus_argocd"
          token: "$INFLUX_TOKEN"
          organization: "square"
          tagpass:
            prometheus_app: ["argocd"]
      - influxdb_v2:
          urls:
            - "https://monitoring.lsst.codes"
          bucket: "prometheus_hub"
          token: "$INFLUX_TOKEN"
          organization: "square"
          tagpass:
            prometheus_app: ["hub"]
      - influxdb_v2:
          urls:
            - "https://monitoring.lsst.codes"
          bucket: "prometheus_certmanager"
          token: "$INFLUX_TOKEN"
          organization: "square"
          tagpass:
            prometheus_app: ["certmanager"]
      - influxdb_v2:
          urls:
            - "https://monitoring.lsst.codes"
          bucket: "prometheus_ingressnginx"
          token: "$INFLUX_TOKEN"
          organization: "square"
          tagpass:
            prometheus_app: ["ingressnginx"]
      # Kubernetes: split by namespace
      - influxdb_v2:
          token: "$INFLUX_TOKEN"
          urls:
            - "https://monitoring.lsst.codes"
          organization: "square"
          bucket: "k8s_argocd"
          namepass: ["kubernetes_pod_container"]
          tagpass:
            namespace: ["argocd"]
  tplVersion: 2

# -- Path to the Vault secrets (`secret/k8s_operator/<hostname>/telegraf`)
# @default -- None, must be set
vaultSecretsPath: ""
